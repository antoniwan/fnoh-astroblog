---
import BaseLayout from '../layouts/BaseLayout.astro';
import Container from '../components/ui/Container.astro';
import { SITE_DESCRIPTION, SITE_TITLE, CATEGORIES } from '../consts';
import { getCollection } from 'astro:content';

// Get all blog posts
const posts = await getCollection('writings');

// Group posts by category
const postsByCategory = Object.keys(CATEGORIES).reduce((acc, categoryKey) => {
	acc[categoryKey] = posts.filter(post => post.data.category === categoryKey);
	return acc;
}, {} as Record<string, typeof posts>);

// Get uncategorized posts
const uncategorizedPosts = posts.filter(post => !post.data.category);

// Calculate total posts
const totalPosts = posts.length;
---

<BaseLayout 
	title={SITE_TITLE} 
	description={SITE_DESCRIPTION}
	type="organization"
>
	<Container size="lg" as="header" class="index-header">
		<h1 class="site-title">{SITE_TITLE}</h1>
		<p class="site-description">{SITE_DESCRIPTION} Currently featuring <strong>{totalPosts} total writings</strong> across various categories.</p>
	</Container>

	<Container size="lg" as="main" class="index-content">

		{Object.entries(CATEGORIES).map(([categoryKey, category]) => {
			const categoryPosts = postsByCategory[categoryKey] || [];
			return (
				<section class="toc-section">
					<a href={`/${categoryKey}`} class="section-link">
						<div class="section-header">
							<span class="section-emoji">{category.emoji}</span>
							<div class="section-info">
								<h2 class="section-title">{category.title}</h2>
								<p class="section-description">{category.description}</p>
							</div>
							<div class="section-meta">
								<span class="post-count">{categoryPosts.length}</span>
								<span class="count-label">posts</span>
								<span class="arrow">‚Üí</span>
							</div>
						</div>
					</a>
				</section>
			);
		})}

		{uncategorizedPosts.length > 0 && (
			<section class="toc-section">
				<a href="/writings" class="section-link">
					<div class="section-header">
						<span class="section-emoji">üìù</span>
						<div class="section-info">
							<h2 class="section-title">All Writings</h2>
							<p class="section-description">Browse all posts chronologically, including uncategorized ones.</p>
						</div>
						<div class="section-meta">
							<span class="post-count">{totalPosts}</span>
							<span class="count-label">posts</span>
							<span class="arrow">‚Üí</span>
						</div>
					</div>
				</a>
			</section>
		)}
	</Container>
</BaseLayout>

<style>
	.index-header {
		text-align: center;
		margin-bottom: var(--spacing-3xl);
		padding: var(--spacing-2xl) 0;
		border-bottom: 2px solid var(--color-border);
	}

	.site-title {
		font-size: var(--font-size-4xl);
		font-weight: var(--font-weight-bold);
		margin-bottom: var(--spacing-lg);
		color: var(--color-text);
		letter-spacing: -0.02em;
	}

	.site-description {
		font-size: var(--font-size-xl);
		color: var(--color-text-light);
		max-width: 700px;
		margin: 0 auto var(--spacing-xl);
		line-height: var(--line-height-relaxed);
	}



	.index-content {
		/* Container component handles max-width and padding */
	}

	.toc-intro {
		text-align: center;
		margin-bottom: var(--spacing-3xl);
		padding: var(--spacing-xl) 0;
	}

	.toc-title {
		font-size: var(--font-size-2xl);
		font-weight: var(--font-weight-semibold);
		color: var(--color-text);
		margin: 0 0 var(--spacing-sm) 0;
	}

	.toc-subtitle {
		font-size: var(--font-size-lg);
		color: var(--color-text-light);
		margin: 0;
	}

	.toc-section {
		margin-bottom: var(--spacing-lg);
	}

	.section-link {
		display: block;
		text-decoration: none;
		color: inherit;
		border: 2px solid var(--color-border-subtle);
		border-radius: var(--border-radius-lg);
		transition: all 0.3s ease;
		background: var(--color-background);
	}

	.section-link:hover {
		border-color: var(--color-primary);
		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
		transform: translateY(-2px);
	}

	.section-header {
		display: flex;
		align-items: center;
		gap: var(--spacing-lg);
		padding: var(--spacing-xl);
	}

	.section-emoji {
		font-size: var(--font-size-3xl);
		flex-shrink: 0;
	}

	.section-info {
		flex: 1;
		min-width: 0;
	}

	.section-title {
		font-size: var(--font-size-xl);
		font-weight: var(--font-weight-semibold);
		color: var(--color-text);
		margin: 0 0 var(--spacing-sm) 0;
		line-height: var(--line-height-tight);
	}

	.section-description {
		font-size: var(--font-size-base);
		color: var(--color-text-light);
		margin: 0;
		line-height: var(--line-height-relaxed);
	}

	.section-meta {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: var(--spacing-xs);
		flex-shrink: 0;
		min-width: 80px;
	}

	.post-count {
		font-size: var(--font-size-xl);
		font-weight: var(--font-weight-bold);
		color: var(--color-primary);
	}

	.count-label {
		font-size: var(--font-size-xs);
		color: var(--color-text-lighter);
		text-transform: uppercase;
		letter-spacing: 0.05em;
	}

	.arrow {
		font-size: var(--font-size-lg);
		color: var(--color-text-light);
		transition: transform 0.3s ease;
	}

	.section-link:hover .arrow {
		transform: translateX(4px);
		color: var(--color-primary);
	}

	@media (max-width: 768px) {
		.index-header {
			padding: var(--spacing-xl) 0;
			margin-bottom: var(--spacing-2xl);
		}

		.site-title {
			font-size: var(--font-size-3xl);
		}

		.site-description {
			font-size: var(--font-size-lg);
		}

		.toc-intro {
			margin-bottom: var(--spacing-2xl);
			padding: var(--spacing-lg) 0;
		}

		.section-header {
			flex-direction: column;
			text-align: center;
			gap: var(--spacing);
			padding: var(--spacing-lg);
		}

		.section-meta {
			flex-direction: row;
			gap: var(--spacing-sm);
		}

		.arrow {
			transform: rotate(90deg);
		}

		.section-link:hover .arrow {
			transform: rotate(90deg) translateY(-4px);
		}
	}

	@media (max-width: 480px) {
		.section-header {
			padding: var(--spacing);
		}

		.section-title {
			font-size: var(--font-size-lg);
		}

		.section-description {
			font-size: var(--font-size-sm);
		}
	}
</style>
