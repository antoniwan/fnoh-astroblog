---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { SITE_TITLE } from '../../consts';
import FormattedDate from '../../components/FormattedDate.astro';

const posts = await getCollection('blog');
---

<BaseLayout 
	title={`Blog - ${SITE_TITLE}`} 
	description="Explore thoughtful reflections on humanity, personal growth, and the human condition through our collection of blog posts."
	layout="default"
>
	<div class="blog-index">
		<header class="page-header">
			<h1>Blog Posts</h1>
			<p>Thoughtful explorations of what it means to be human</p>
		</header>
		
		<div class="posts-grid">
			{posts.map((post) => (
				<article class="post-card">
					{post.data.heroImage && (
						<div class="post-image">
							<img 
								src={post.data.heroImage.src} 
								alt={post.data.title}
								width={400}
								height={200}
							/>
						</div>
					)}
					<div class="post-content">
						<h2><a href={`/blog/${post.id}`}>{post.data.title}</a></h2>
						<p class="post-excerpt">{post.data.description}</p>
						<div class="post-meta">
							<time datetime={post.data.pubDate.toISOString()}>
								<FormattedDate date={post.data.pubDate} />
							</time>
							{post.data.updatedDate && (
								<span class="updated">
									Updated: <FormattedDate date={post.data.updatedDate} />
								</span>
							)}
						</div>
					</div>
				</article>
			))}
		</div>
		
		{posts.length === 0 && (
			<div class="no-posts">
				<h2>No posts yet</h2>
				<p>Check back soon for thoughtful reflections on humanity.</p>
			</div>
		)}
	</div>
</BaseLayout>

<style>
	.blog-index {
		padding: 2rem 0;
	}
	
	.page-header {
		text-align: center;
		margin-bottom: 3rem;
	}
	
	.page-header h1 {
		font-size: 2.5rem;
		font-weight: 700;
		margin-bottom: 1rem;
		color: #1f2937;
	}
	
	.page-header p {
		font-size: 1.2rem;
		color: #6b7280;
	}
	
	.posts-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
		gap: 2rem;
		margin-bottom: 3rem;
	}
	
	.post-card {
		background: white;
		border-radius: 12px;
		overflow: hidden;
		box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
		transition: all 0.3s ease;
		border: 1px solid #e5e7eb;
	}
	
	.post-card:hover {
		transform: translateY(-4px);
		box-shadow: 0 12px 25px rgba(0, 0, 0, 0.1);
	}
	
	.post-image {
		width: 100%;
		height: 200px;
		overflow: hidden;
	}
	
	.post-image img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		transition: transform 0.3s ease;
	}
	
	.post-card:hover .post-image img {
		transform: scale(1.05);
	}
	
	.post-content {
		padding: 1.5rem;
	}
	
	.post-content h2 {
		font-size: 1.4rem;
		font-weight: 600;
		margin-bottom: 0.75rem;
		line-height: 1.3;
	}
	
	.post-content h2 a {
		color: #1f2937;
		text-decoration: none;
	}
	
	.post-content h2 a:hover {
		color: #667eea;
	}
	
	.post-excerpt {
		color: #6b7280;
		line-height: 1.6;
		margin-bottom: 1rem;
		font-size: 0.95rem;
	}
	
	.post-meta {
		font-size: 0.85rem;
		color: #9ca3af;
		display: flex;
		flex-direction: column;
		gap: 0.25rem;
	}
	
	.updated {
		font-style: italic;
	}
	
	.no-posts {
		text-align: center;
		padding: 3rem 0;
		color: #6b7280;
	}
	
	.no-posts h2 {
		font-size: 1.5rem;
		margin-bottom: 1rem;
		color: #374151;
	}
	
	@media (max-width: 768px) {
		.posts-grid {
			grid-template-columns: 1fr;
			gap: 1.5rem;
		}
		
		.page-header h1 {
			font-size: 2rem;
		}
		
		.post-content {
			padding: 1.25rem;
		}
	}
</style>
