---
import BaseLayout from './BaseLayout.astro';
import type { ImageMetadata } from 'astro';

interface Props {
	title: string;
	description: string;
	image?: ImageMetadata;
	author?: string;
	pubDate?: Date;
	updatedDate?: Date;
	readingTime?: string;
	class?: string;
}

const {
	title,
	description,
	image,
	author,
	pubDate,
	updatedDate,
	readingTime,
	class: className = ''
} = Astro.props;
---

<BaseLayout 
	title={title} 
	description={description} 
	image={image}
	class={`article-layout ${className}`}
>
	<article class="article">
		{image && (
			<div class="article-hero">
				<img 
					src={image.src} 
					alt={title}
					width={800}
					height={400}
				/>
			</div>
		)}
		
		<header class="article-header">
			<h1>{title}</h1>
			
			{(author || pubDate || readingTime) && (
				<div class="article-meta">
					{author && <span class="author">By {author}</span>}
					{pubDate && (
						<time datetime={pubDate.toISOString()} class="pub-date">
							{pubDate.toLocaleDateString('en-US', { 
								year: 'numeric', 
								month: 'long', 
								day: 'numeric' 
							})}
						</time>
					)}
					{readingTime && <span class="reading-time">{readingTime}</span>}
					{updatedDate && (
						<span class="updated-date">
							Updated {updatedDate.toLocaleDateString('en-US', { 
								year: 'numeric', 
								month: 'long', 
								day: 'numeric' 
							})}
						</span>
					)}
				</div>
			)}
		</header>
		
		<div class="article-content">
			<slot />
		</div>
	</article>
</BaseLayout>

<style>
	.article {
		width: 100%;
		max-width: 100%;
		padding: 0 var(--container-padding);
	}
	
	.article-hero {
		margin-bottom: calc(var(--spacing) * 2);
		text-align: center;
		width: 100%;
	}
	
	.article-hero img {
		max-width: 100%;
		height: auto;
		width: 100%;
		object-fit: cover;
	}
	
	.article-header {
		margin-bottom: calc(var(--spacing) * 2);
		text-align: center;
		width: 100%;
	}
	
	.article-meta {
		display: flex;
		flex-wrap: wrap;
		gap: var(--spacing);
		justify-content: center;
		align-items: center;
		margin-top: var(--spacing);
	}
	
	.article-meta > * {
		padding: calc(var(--spacing) * 0.25) calc(var(--spacing) * 0.75);
		background: var(--color-blockquote-bg);
		border-radius: var(--border-radius-lg);
		font-size: var(--font-size-sm);
	}
	
	.article-content {
		width: 100%;
		max-width: 100%;
		line-height: var(--line-height-relaxed);
	}
	
	@media (max-width: 768px) {
		.article {
			padding: 0 calc(var(--container-padding) * 0.5);
		}
		
		.article-meta {
			flex-direction: column;
			gap: calc(var(--spacing) * 0.5);
		}
	}
</style>
