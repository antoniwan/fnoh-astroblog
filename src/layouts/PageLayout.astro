---
import BaseLayout from './BaseLayout.astro';

interface Props {
	title: string;
	description: string;
	image?: import('astro').ImageMetadata;
	showHeader?: boolean;
	showFooter?: boolean;
	class?: string;
	sidebar?: boolean;
}

const {
	title,
	description,
	image,
	showHeader = true,
	showFooter = true,
	class: className = '',
	sidebar = false
} = Astro.props;
---

<BaseLayout 
	title={title} 
	description={description} 
	image={image}
	showHeader={showHeader}
	showFooter={showFooter}
	class={className}
>
	<div class={`page-content ${sidebar ? 'with-sidebar' : ''}`}>
		<main class="main-content">
			<slot />
		</main>
		
		{sidebar && (
			<aside class="sidebar">
				<slot name="sidebar" />
			</aside>
		)}
	</div>
</BaseLayout>

<style>
	.page-content {
		width: 100%;
		max-width: 100%;
		padding: calc(var(--spacing) * 2) var(--container-padding);
		background-color: var(--color-bg);
	}
	
	.main-content {
		width: 100%;
		max-width: 100%;
	}
	
	.page-content.with-sidebar {
		display: grid;
		grid-template-columns: 1fr 300px;
		gap: calc(var(--spacing) * 2);
		align-items: start;
	}
	
	.sidebar {
		width: 100%;
		background-color: var(--color-blockquote-bg);
		padding: var(--spacing);
		border-radius: var(--border-radius-md);
		border: 1px solid var(--color-border);
	}
	
	@media (max-width: 768px) {
		.page-content {
			padding: calc(var(--spacing) * 2) calc(var(--container-padding) * 0.5);
		}
		
		.page-content.with-sidebar {
			grid-template-columns: 1fr;
			gap: var(--spacing);
		}
		
		.sidebar {
			order: -1;
		}
	}
</style>
