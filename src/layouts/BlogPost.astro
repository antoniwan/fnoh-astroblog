---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import BaseLayout from "./BaseLayout.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { getCategoryFromReference } from "../utils/categories";

type Props = CollectionEntry<"writings">["data"];

const { title, description, pubDate, updatedDate, heroImage, category } =
  Astro.props;

// Get category data if category reference exists
let categoryData = null;
if (category) {
  categoryData = await getCategoryFromReference(category);
}
---

<BaseLayout
  title={title}
  description={description}
  class="blog-post"
  type="article"
  publishedTime={pubDate.toISOString()}
  modifiedTime={updatedDate?.toISOString()}
  author="Field Notes on Humanity"
  section={categoryData?.title || undefined}
  tags={categoryData ? [categoryData.slug] : []}
>
  <article class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 lg:py-12">
    <!-- Mobile Header (visible on small screens) -->
    <div class="lg:hidden mb-8 text-center">
      <h1 class="text-3xl lg:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4 leading-tight">
        {title}
      </h1>
      {description && (
        <p class="text-lg text-gray-600 dark:text-gray-400 mb-6 leading-relaxed">
          {description}
        </p>
      )}
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-[350px_1fr] xl:grid-cols-[400px_1fr] gap-8 lg:gap-12 xl:gap-16">
      <!-- Sidebar -->
      <aside class="lg:order-1">
        <div class="lg:sticky lg:top-24">
          <!-- Desktop Header (hidden on mobile) -->
          <div class="hidden lg:block mb-8">
            <h1 class="text-4xl xl:text-5xl font-bold text-gray-900 dark:text-gray-100 mb-4 leading-tight">
              {title}
            </h1>
            {description && (
              <p class="text-xl text-gray-600 dark:text-gray-400 leading-relaxed">
                {description}
              </p>
            )}
          </div>

          <!-- Post Meta -->
          <div class="space-y-4 mb-8">
            <div class="flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400">
              <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="12" cy="12" r="10"></circle>
                <polyline points="12,6 12,12 16,14"></polyline>
              </svg>
              <span>~5 min read</span>
            </div>

            <div class="flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400">
              <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M8 2v4M16 2v4M3 10h18M5 4h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2z"></path>
              </svg>
              <span>Published <FormattedDate date={pubDate} /></span>
            </div>

            {updatedDate && (
              <div class="flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400">
                <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z" />
                </svg>
                <span>Updated <FormattedDate date={updatedDate} /></span>
              </div>
            )}

            {categoryData && (
              <div class="flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400">
                <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M3 3h18v18H3zM21 9H3M21 15H3M12 3v18" />
                </svg>
                <span class="text-lg">{categoryData.emoji}</span>
                <span class="font-medium text-blue-600 dark:text-blue-400">{categoryData.title}</span>
              </div>
            )}
          </div>

          <!-- Back Navigation -->
          <div class="pt-6 border-t border-gray-200 dark:border-gray-700">
            <a 
              href="/" 
              class="inline-flex items-center gap-2 text-sm font-medium text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 transition-colors duration-200 group"
              data-astro-reload
            >
              <svg class="w-4 h-4 transition-transform duration-200 group-hover:-translate-x-1" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M19 12H5M12 19l-7-7 7-7"></path>
              </svg>
              <span>Back to Home</span>
            </a>
          </div>
        </div>
      </aside>

      <!-- Main Content -->
      <main class="lg:order-2">
        {heroImage && (
          <div class="mb-8 lg:mb-12">
            <Image
              src={heroImage}
              alt={title}
              width={1020}
              height={400}
              class="w-full h-auto rounded-2xl shadow-lg"
              format="webp"
              quality={85}
              loading="eager"
            />
          </div>
        )}

        <div class="prose prose-lg max-w-none prose-headings:text-gray-900 prose-headings:dark:text-gray-100 prose-p:text-gray-700 prose-p:dark:text-gray-300 prose-strong:text-gray-900 prose-strong:dark:text-gray-100 prose-a:text-blue-600 prose-a:dark:text-blue-400 prose-a:no-underline hover:prose-a:underline prose-blockquote:border-l-blue-500 prose-blockquote:bg-gray-50 prose-blockquote:dark:bg-gray-800 prose-code:text-gray-900 prose-code:dark:text-gray-100 prose-code:bg-gray-100 prose-code:dark:bg-gray-800 prose-pre:bg-gray-900 prose-pre:dark:bg-gray-800 prose-pre:text-gray-100 prose-img:rounded-xl prose-img:shadow-md">
          <slot />
        </div>
      </main>
    </div>
  </article>
</BaseLayout>
