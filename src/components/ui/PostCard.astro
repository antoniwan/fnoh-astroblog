---
import type { CollectionEntry } from 'astro:content';
import { getCategoryFromReference } from '../../utils/categories';

interface Props {
	post: CollectionEntry<'writings'>;
	showImage?: boolean;
	class?: string;
}

const { 
	post, 
	showImage = true,
	class: className = ''
} = Astro.props;

const { title, description, pubDate, heroImage, category } = post.data;

// Get category data if category reference exists
let categoryData = null;
if (category) {
	categoryData = await getCategoryFromReference(category);
}
---

<article class:list={['post-card', className]}>
	<a href={`/writings/${post.id.replace(/\.md$/, '')}`} class="link-card">
		{showImage && heroImage && (
			<div class="post-image">
				<img 
					src={heroImage.src} 
					alt={title || `Image for ${title}`}
					loading="lazy"
				/>
			</div>
		)}
		<div class="post-content">
			{categoryData && (
				<a href={`/${categoryData.slug}`} class="post-category" data-astro-reload>
					<span class="category-emoji">{categoryData.emoji}</span>
					<span class="category-name">{categoryData.title}</span>
				</a>
			)}
			<h2 class="post-title">{title}</h2>
			<p class="post-description">{description}</p>
			<time class="post-date" datetime={pubDate.toISOString()}>
				{pubDate.toLocaleDateString('en-US', { 
					year: 'numeric', 
					month: 'long', 
					day: 'numeric' 
				})}
			</time>
		</div>
	</a>
</article>

<style>
	.post-card {
		border: 1px solid var(--color-border-light);
		border-radius: var(--border-radius-lg);
		overflow: hidden;
		transition: all var(--transition-normal);
		background: var(--color-bg);
		box-shadow: var(--shadow-sm);
		position: relative;
	}

	.post-card:hover {
		border-color: var(--color-border);
		box-shadow: var(--shadow-md);
		transform: translateY(-2px);
	}

	.post-card::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		height: 2px;
		background: linear-gradient(90deg, var(--color-primary), var(--color-accent));
		opacity: 0;
		transition: opacity var(--transition-normal);
	}

	.post-card:hover::before {
		opacity: 1;
	}

	.post-image {
		width: 100%;
		height: 200px;
		overflow: hidden;
		position: relative;
	}

	.post-image img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		transition: transform var(--transition-normal);
	}

	.post-card:hover .post-image img {
		transform: scale(1.05);
	}

	.post-content {
		padding: var(--spacing-xl);
	}

	.post-category {
		display: flex;
		align-items: center;
		gap: var(--spacing-xs);
		margin-bottom: var(--spacing-sm);
		font-size: var(--font-size-sm);
		color: var(--color-text-light);
		text-decoration: none;
		transition: all var(--transition-fast);
		padding: var(--spacing-xs) var(--spacing-sm);
		border-radius: var(--border-radius-sm);
		background: var(--color-bg-secondary);
		border: 1px solid var(--color-border-light);
		width: fit-content;
	}

	.post-category:hover {
		background: var(--color-hover-bg);
		border-color: var(--color-primary);
		color: var(--color-primary);
		transform: translateY(-1px);
		box-shadow: var(--shadow-sm);
	}

	.category-emoji {
		font-size: var(--font-size-base);
	}

	.category-name {
		font-weight: var(--font-weight-medium);
		color: inherit;
		text-transform: uppercase;
		letter-spacing: var(--letter-spacing-wider);
		font-size: var(--font-size-xs);
	}

	.post-title {
		font-family: var(--font-family-heading);
		font-size: var(--font-size-xl);
		font-weight: var(--font-weight-semibold);
		color: var(--color-heading);
		margin: 0 0 var(--spacing-md) 0;
		line-height: var(--line-height-tight);
		letter-spacing: var(--letter-spacing-tight);
	}

	.post-description {
		font-size: var(--font-size-base);
		color: var(--color-text-light);
		margin: 0 0 var(--spacing-md) 0;
		line-height: var(--line-height-relaxed);
		display: -webkit-box;
		-webkit-line-clamp: 3;
		-webkit-box-orient: vertical;
		overflow: hidden;
		text-align: justify;
	}

	.post-date {
		font-size: var(--font-size-sm);
		color: var(--color-text-lighter);
		font-style: italic;
		font-family: var(--font-family-serif);
	}

	@media (max-width: 768px) {
		.post-image {
			height: 150px;
		}
		
		.post-content {
			padding: var(--spacing-lg);
		}
		
		.post-title {
			font-size: var(--font-size-lg);
		}

		.post-category {
			font-size: var(--font-size-xs);
			padding: calc(var(--spacing-xs) * 0.5) var(--spacing-sm);
		}

		.category-emoji {
			font-size: var(--font-size-sm);
		}
	}
</style>
