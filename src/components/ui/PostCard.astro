---
import type { CollectionEntry } from "astro:content";
import { getCategoryFromReference } from "../../utils/categories";

interface Props {
  post: CollectionEntry<"writings">;
  showImage?: boolean;
  class?: string;
}

const { post, showImage = true, class: className = "" } = Astro.props;

const { title, description, pubDate, heroImage, category } = post.data;

// Get category data if category reference exists
let categoryData = null;
if (category) {
  categoryData = await getCategoryFromReference(category);
}
---

<article
  class:list={[
    "border border-gray-200 dark:border-gray-700 rounded-xl overflow-hidden transition-all duration-300 bg-white dark:bg-gray-800 shadow-sm hover:shadow-lg relative flex flex-col h-full hover:border-gray-300 dark:hover:border-gray-600 hover:-translate-y-1 group",
    className,
  ]}
>
  <a
    href={`/writings/${post.id.replace(/\.md$/, "")}`}
    class="flex flex-col h-full no-underline text-inherit"
  >
    {
      showImage && heroImage && (
        <div class="w-full h-48 overflow-hidden relative flex-shrink-0 bg-gray-100 dark:bg-gray-700 md:h-36 sm:h-32">
          <img
            src={heroImage.src}
            alt={title || `Image for ${title}`}
            loading="lazy"
            class="w-full h-full object-cover transition-transform duration-300 block group-hover:scale-105"
          />
        </div>
      )
    }
    <div class="p-6 flex-1 flex flex-col md:p-4 sm:p-3">
      {
        categoryData && (
          <a
            href={`/${categoryData.slug}`}
            class="inline-flex items-center gap-2 mb-4 text-sm text-gray-600 dark:text-gray-400 no-underline transition-all duration-200 py-1 px-3 rounded-lg bg-gray-100 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 w-fit font-medium uppercase tracking-wider hover:bg-blue-600 hover:border-blue-600 hover:text-white hover:-translate-y-0.5 hover:shadow-sm md:text-xs md:py-1 md:px-2 md:mb-3"
            data-astro-reload
          >
            <span class="text-base md:text-sm">{categoryData.emoji}</span>
            <span class="font-medium text-inherit text-xs">
              {categoryData.title}
            </span>
          </a>
        )
      }
      <h2
        class="font-serif text-xl font-semibold text-gray-900 dark:text-gray-100 m-0 mb-4 leading-tight tracking-tight flex-shrink-0 break-words max-w-full md:text-lg sm:text-base"
      >
        {title}
      </h2>
      <p
        class="text-base text-gray-600 dark:text-gray-400 m-0 mb-4 leading-relaxed flex-1 break-words max-w-full sm:text-sm line-clamp-3"
      >
        {description}
      </p>
      <time
        class="text-sm text-gray-500 dark:text-gray-500 italic font-serif flex-shrink-0 mt-auto"
        datetime={pubDate.toISOString()}
      >
        {
          pubDate.toLocaleDateString("en-US", {
            year: "numeric",
            month: "long",
            day: "numeric",
          })
        }
      </time>
    </div>
  </a>
</article>
