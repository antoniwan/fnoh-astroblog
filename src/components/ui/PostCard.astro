---
import type { CollectionEntry } from "astro:content";
import { getCategoryFromReference } from "../../utils/categories";

interface Props {
  post: CollectionEntry<"writings">;
  showImage?: boolean;
  class?: string;
}

const { post, showImage = true, class: className = "" } = Astro.props;

const { title, description, pubDate, heroImage, category } = post.data;

// Get category data if category reference exists
let categoryData = null;
if (category) {
  categoryData = await getCategoryFromReference(category);
}
---

<article class:list={[
  "border border-border-light rounded-lg overflow-hidden transition-all duration-normal bg-background shadow-sm relative flex flex-col m-0 p-0 box-border min-w-0 max-w-full w-full h-full hover:border-border hover:shadow-md hover:-translate-y-0.5 before:content-[''] before:absolute before:top-0 before:left-0 before:right-0 before:h-0.5 before:bg-gradient-to-r before:from-primary-800 before:to-primary-600 before:opacity-0 before:transition-opacity before:duration-normal hover:before:opacity-100",
  className
]}>
  <a href={`/writings/${post.id.replace(/\.md$/, "")}`} class="flex flex-col h-full no-underline text-inherit m-0 p-0 box-border min-w-0 max-w-full">
    {
      showImage && heroImage && (
        <div class="w-full h-[200px] overflow-hidden relative flex-shrink-0 bg-background-secondary max-w-full box-border m-0 md:h-[150px] sm:h-[120px]">
          <img
            src={heroImage.src}
            alt={title || `Image for ${title}`}
            loading="lazy"
            class="w-full h-full object-cover transition-transform duration-normal block max-w-full box-border m-0 hover:scale-105"
          />
        </div>
      )
    }
    <div class="p-xl flex-1 flex flex-col m-0 box-border min-w-0 max-w-full md:p-lg sm:p-md">
      {
        categoryData && (
          <a
            href={`/${categoryData.slug}`}
            class="inline-flex items-center gap-xs mb-md text-sm text-text-light no-underline transition-all duration-fast py-xs px-sm rounded-md bg-background-secondary border border-border-light w-fit font-medium uppercase tracking-wider hover:bg-primary-800 hover:border-primary-800 hover:text-white hover:-translate-y-0.5 hover:shadow-sm md:text-xs md:py-xs md:px-sm md:mb-sm sm:text-xs sm:py-[calc(0.5rem*0.5)] sm:px-sm"
            data-astro-reload
          >
            <span class="text-base md:text-sm">{categoryData.emoji}</span>
            <span class="font-medium text-inherit text-xs">{categoryData.title}</span>
          </a>
        )
      }
      <h2 class="font-heading text-xl font-semibold text-heading m-0 mb-md leading-tight tracking-tight flex-shrink-0 break-words max-w-full md:text-lg sm:text-base">{title}</h2>
      <p class="text-base text-text-light m-0 mb-md leading-relaxed line-clamp-3 text-justify flex-1 break-words max-w-full sm:text-sm">{description}</p>
      <time class="text-sm text-text-lighter italic font-serif flex-shrink-0 mt-auto" datetime={pubDate.toISOString()}>
        {
          pubDate.toLocaleDateString("en-US", {
            year: "numeric",
            month: "long",
            day: "numeric",
          })
        }
      </time>
    </div>
  </a>
</article>

<style>
  /* Fallback for missing images */
  .post-image:empty::before {
    content: "üìù";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 1.625rem;
    color: #6b7280;
    opacity: 0.5;
  }

  /* Ensure proper grid behavior */
  @media (min-width: 769px) {
    .post-card {
      min-height: 400px;
    }
  }

  /* Line clamp utility */
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
