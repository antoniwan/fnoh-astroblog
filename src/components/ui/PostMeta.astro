---
import FormattedDate from '../FormattedDate.astro';

interface Props {
	pubDate: Date;
	updatedDate?: Date;
	author?: string;
	readingTime?: string;
	class?: string;
	showAuthor?: boolean;
	showReadingTime?: boolean;
	showUpdatedDate?: boolean;
}

const { 
	pubDate, 
	updatedDate, 
	author, 
	readingTime, 
	class: className = '',
	showAuthor = false,
	showReadingTime = false,
	showUpdatedDate = true
} = Astro.props;
---

<div class:list={['post-meta', className]}>
	{showAuthor && author && (
		<span class="author">By {author}</span>
	)}
	<time datetime={pubDate.toISOString()} class="pub-date">
		<FormattedDate date={pubDate} />
	</time>
	{showReadingTime && readingTime && (
		<span class="reading-time">{readingTime}</span>
	)}
	{showUpdatedDate && updatedDate && (
		<span class="updated-date">
			Updated <FormattedDate date={updatedDate} />
		</span>
	)}
</div>

<style>
	.post-meta {
		display: flex;
		flex-wrap: wrap;
		gap: var(--spacing);
		justify-content: center;
		align-items: center;
		margin-top: var(--spacing);
		font-size: var(--font-size-sm);
		color: var(--color-text);
		opacity: 0.7;
	}
	
	.post-meta > * {
		padding: var(--spacing-xs) var(--spacing-sm);
		background: var(--color-blockquote-bg);
		border-radius: var(--border-radius-lg);
		font-size: var(--font-size-sm);
	}
	
	.author {
		font-weight: var(--font-weight-medium);
	}
	
	.pub-date {
		font-weight: var(--font-weight-medium);
	}
	
	.reading-time {
		font-style: italic;
	}
	
	.updated-date {
		font-style: italic;
		opacity: 0.8;
	}
	
	/* Responsive adjustments */
	@media (max-width: 768px) {
		.post-meta {
			flex-direction: column;
			gap: var(--spacing-sm);
		}
	}
</style>
