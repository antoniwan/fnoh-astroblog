---
import { ArrowUp } from "lucide-astro";

interface Props {
  class?: string;
  threshold?: number;
  position?: "bottom-right" | "bottom-left" | "bottom-center";
}

const {
  class: className = "",
  threshold = 300,
  position = "bottom-right",
} = Astro.props;

// Position classes mapping
const positionClasses = {
  "bottom-right": "bottom-8 right-8",
  "bottom-left": "bottom-8 left-8",
  "bottom-center": "bottom-8 left-1/2 -translate-x-1/2",
};
---

<button
  id="scroll-to-top"
  class:list={[
    "fixed w-12 h-12 rounded-full bg-blue-600 text-white border-2 border-blue-200 cursor-pointer flex items-center justify-center opacity-0 invisible translate-y-4 transition-all duration-200 z-50 shadow-lg hover:bg-blue-700 hover:-translate-y-1 hover:shadow-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2",
    positionClasses[position],
    className,
  ]}
  aria-label="Scroll to top"
>
  <ArrowUp class="w-5 h-5" />
</button>

<script define:vars={{ threshold }}>
  // Simple scroll to top functionality
  const scrollToTopBtn = document.getElementById("scroll-to-top");
  if (!scrollToTopBtn) return;

  // Show/hide button based on scroll position
  function handleScroll() {
    const shouldShow = window.pageYOffset > threshold;
    if (shouldShow) {
      scrollToTopBtn.classList.remove('opacity-0', 'invisible', 'translate-y-4');
      scrollToTopBtn.classList.add('opacity-100', 'visible', 'translate-y-0');
    } else {
      scrollToTopBtn.classList.add('opacity-0', 'invisible', 'translate-y-4');
      scrollToTopBtn.classList.remove('opacity-100', 'visible', 'translate-y-0');
    }
  }

  // Scroll to top when clicked
  scrollToTopBtn.addEventListener("click", () => {
    window.scrollTo({ top: 0, behavior: "smooth" });
  });

  // Listen for scroll events
  window.addEventListener("scroll", handleScroll, { passive: true });

  // Initial check
  handleScroll();
</script>
