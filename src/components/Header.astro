---
import { SITE_TITLE } from '../consts';
import HeaderLink from './HeaderLink.astro';
import ThemeToggle from './ThemeToggle.astro';
import CategoriesDropdown from './CategoriesDropdown.astro';
import { Menu, X } from 'lucide-astro';

// Navigation links configuration
const navigationLinks = [
	{ href: '/', label: 'Home' },
	{ component: CategoriesDropdown, type: 'component' },
	{ href: '/writings', label: 'All Writings' },
	{ href: '/about', label: 'About' }
];
---

<header class="header-nav" data-scroll="show">
	<nav>
		<h1><a href="/">{SITE_TITLE}</a></h1>
		
		<!-- Desktop Navigation -->
		<div class="nav-links desktop-nav">
			{navigationLinks.map(link => 
				link.type === 'component' ? 
					<link.component /> : 
					<HeaderLink href={link.href}>{link.label}</HeaderLink>
			)}
			<ThemeToggle />
		</div>
		
		<!-- Mobile Navigation Toggle -->
		<button class="mobile-nav-toggle" aria-label="Toggle navigation menu" aria-expanded="false">
			<div class="icon-container">
				<Menu class="menu-icon" />
				<X class="close-icon" />
			</div>
		</button>
  
		<!-- Mobile Navigation Menu -->
		<div class="mobile-nav" aria-hidden="true">
			<div class="mobile-nav-content">
				<div class="mobile-nav-links">
					{navigationLinks.map(link => 
						link.type === 'component' ? 
							<link.component /> : 
							<HeaderLink href={link.href}>{link.label}</HeaderLink>
					)}
					<div class="mobile-theme-toggle">
						<ThemeToggle />
					</div>
				</div>
			</div>
		</div>
	</nav>
</header>

<script>
	// Mobile navigation functionality
	(function() {
		const mobileNavToggle = document.querySelector('.mobile-nav-toggle');
		const mobileNav = document.querySelector('.mobile-nav');
		let isNavOpen = false;
  
		function toggleMobileNav() {
			isNavOpen = !isNavOpen;
			
			if (mobileNavToggle) {
				mobileNavToggle.setAttribute('aria-expanded', isNavOpen.toString());
			}
			if (mobileNav) {
				mobileNav.setAttribute('aria-hidden', (!isNavOpen).toString());
				mobileNav.classList.toggle('active', isNavOpen);
			}
			
			mobileNavToggle?.classList.toggle('active', isNavOpen);
			document.body.style.overflow = isNavOpen ? 'hidden' : '';
		}
		
		// Event delegation for better performance
		document.addEventListener('click', (e) => {
			const target = e.target as Element;
			
			// Handle mobile nav toggle
			if (target.closest('.mobile-nav-toggle')) {
				toggleMobileNav();
				return;
			}
			
			// Close mobile nav when clicking outside
			if (isNavOpen && 
				!target.closest('.mobile-nav') && 
				!target.closest('.mobile-nav-toggle')) {
				toggleMobileNav();
			}
		});
		
		// Close mobile nav when pressing Escape
		document.addEventListener('keydown', (e) => {
			if (e.key === 'Escape' && isNavOpen) {
				toggleMobileNav();
			}
		});
		
		// Close mobile nav on resize
		let resizeTimeout: ReturnType<typeof setTimeout>;
		window.addEventListener('resize', () => {
			clearTimeout(resizeTimeout);
			resizeTimeout = setTimeout(() => {
				if (window.innerWidth > 1024 && isNavOpen) {
					toggleMobileNav();
				}
			}, 150);
		});
		
		// Scroll-based header behavior
		let lastScrollY = window.scrollY;
		let ticking = false;
		
		function updateHeader() {
			const header = document.querySelector('.header-nav');
			if (!header) return;
			
			const currentScrollY = window.scrollY;
			
			// Show/hide header based on scroll direction
			if (currentScrollY > lastScrollY && currentScrollY > 100) {
				header.setAttribute('data-scroll', 'hide');
			} else if (currentScrollY < lastScrollY || currentScrollY <= 100) {
				header.setAttribute('data-scroll', 'show');
			}
			
			// Add scrolled state for backdrop blur
			header.setAttribute('data-scrolled', currentScrollY > 10 ? 'true' : 'false');
			
			lastScrollY = currentScrollY;
			ticking = false;
		}
		
		function requestTick() {
			if (!ticking) {
				requestAnimationFrame(updateHeader);
				ticking = true;
			}
		}
		
		window.addEventListener('scroll', requestTick, { passive: true });
		
		// Initial call
		updateHeader();
	})();
</script>

<style>
	/* Header scroll behavior and positioning */
	.header-nav {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		z-index: 1000;
		width: 100%;
		max-width: 100%;
		padding: 0.75rem var(--container-padding);
		border-bottom: 1px solid rgba(var(--color-border-rgb, 204, 204, 204), 0.15);
		background-color: rgba(var(--color-bg-rgb, 255, 255, 255), 0.8);
		backdrop-filter: blur(0px);
		-webkit-backdrop-filter: blur(0px);
		transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
		height: 60px;
		display: flex;
		align-items: center;
	}
	
	/* Scrolled state with backdrop blur and border */
	.header-nav[data-scrolled="true"] {
		background-color: rgba(var(--color-bg-rgb, 255, 255, 255), 0.95);
		backdrop-filter: blur(20px);
		-webkit-backdrop-filter: blur(20px);
		border-bottom-color: rgba(var(--color-border-rgb, 204, 204, 204), 0.25);
		box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
	}
	
	/* Scroll hide/show animations */
	.header-nav[data-scroll="hide"] {
		transform: translateY(-100%);
	}
	
	.header-nav[data-scroll="show"] {
		transform: translateY(0);
	}
	
	/* Dark theme adjustments */
	html[data-theme="dark"] .header-nav {
		background-color: rgba(var(--color-bg-rgb, 26, 26, 26), 0.8);
		border-bottom-color: rgba(var(--color-border-rgb, 64, 64, 64), 0.2);
	}
	
	html[data-theme="dark"] .header-nav[data-scrolled="true"] {
		background-color: rgba(var(--color-bg-rgb, 26, 26, 26), 0.95);
		border-bottom-color: rgba(var(--color-border-rgb, 64, 64, 64), 0.3);
		box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
	}
	
	nav {
		display: flex;
		align-items: center;
		justify-content: space-between;
		width: 100%;
		max-width: 100%;
		position: relative;
		height: 50px;
	}
	
	header h1 {
		margin: 0;
		font-size: 1.25rem;
		font-weight: var(--font-weight-bold);
		z-index: 1001;
		line-height: 1.2;
	}
	
	header h1 a {
		color: var(--color-text);
		text-decoration: none;
		transition: color var(--transition-fast);
	}
	
	header h1 a:hover {
		color: var(--color-link);
	}
	
	/* Desktop Navigation */
	.desktop-nav {
		display: flex;
		gap: 0.75rem;
		align-items: center;
		height: 100%;
	}
	
	/* Mobile Navigation Toggle */
	.mobile-nav-toggle {
		display: none;
		background: transparent;
		border: none;
		cursor: pointer;
		padding: 0.5rem;
		border-radius: var(--border-radius-md);
		z-index: 1001;
		transition: all var(--transition-fast);
		color: var(--color-text);
		border: 1px solid var(--color-border);
		position: relative;
		overflow: hidden;
		height: 2.5rem;
		width: 2.5rem;
	}
	
	.mobile-nav-toggle:hover {
		background-color: var(--color-hover-bg);
		border-color: var(--color-link);
		transform: scale(1.05);
	}
	
	.mobile-nav-toggle:focus {
		outline: 2px solid var(--color-focus);
		outline-offset: 2px;
		border-color: var(--color-focus);
	}
	
	.icon-container {
		position: relative;
		width: 1.25rem;
		height: 1.25rem;
		display: flex;
		align-items: center;
		justify-content: center;
	}
	
	.menu-icon,
	.close-icon {
		width: 1.25rem;
		height: 1.25rem;
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		transition: all var(--transition-fast);
	}
	
	.close-icon {
		opacity: 0;
		transform: translate(-50%, -50%) rotate(90deg);
	}
	
	/* Show close icon when menu is active */
	.mobile-nav-toggle.active .menu-icon {
		opacity: 0;
		transform: translate(-50%, -50%) rotate(-90deg);
	}
	
	.mobile-nav-toggle.active .close-icon {
		opacity: 1;
		transform: translate(-50%, -50%) rotate(0deg);
	}
	
	/* Mobile Navigation Menu */
	.mobile-nav {
		display: none;
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		z-index: 999;
		opacity: 0;
		visibility: hidden;
		transition: all var(--transition-normal);
	}
	
	.mobile-nav.active {
		opacity: 1;
		visibility: visible;
		display: block;
	}
	
	/* Mobile Navigation Content with proper background */
	.mobile-nav-content {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: var(--color-bg);
		/* Ensure full coverage */
		min-height: 100vh;
		min-width: 100vw;
	}
	
	.mobile-nav-links {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		height: 100vh;
		padding: var(--spacing-3xl) var(--container-padding);
		gap: var(--spacing-xl);
		width: 100%;
		position: relative;
		background-color: var(--color-bg-secondary);
	}
	
	.mobile-nav-links a {
		font-size: var(--font-size-2xl);
		font-weight: var(--font-weight-semibold);
		padding: var(--spacing-lg) var(--spacing-xl);
		border-radius: var(--border-radius-lg);
		transition: all var(--transition-fast);
		text-align: center;
		width: 100%;
		max-width: 300px;
		color: var(--color-text);
		text-decoration: none;
		position: relative;
		z-index: 1;
	}
	
	.mobile-nav-links a:hover {
		color: var(--color-link);
	}
	
	.mobile-nav-links a.active {
		color: var(--color-link);
		font-weight: var(--font-weight-bold);
	}
	
	.mobile-theme-toggle {
		margin-top: var(--spacing-lg);
		padding: var(--spacing);
	}
	
	/* Responsive Design */
	@media (max-width: 1024px) {
		/* Tablet breakpoint - show burger menu on tablets */
		.desktop-nav {
			display: none;
		}
		
		.mobile-nav-toggle {
			display: block;
		}
		
		.mobile-nav {
			display: block;
		}
	}
	
	@media (max-width: 768px) {
		.header-nav {
			padding: 0.75rem var(--container-padding-mobile);
		}
		
		.mobile-nav-links {
			padding: var(--spacing-3xl) var(--container-padding-mobile);
		}
	}
	
	@media (max-width: 480px) {
		.header-nav {
			height: 55px;
		}
		
		nav {
			height: 45px;
		}
		
		header h1 {
			font-size: 1.125rem;
		}
		
		.mobile-nav-links a {
			font-size: var(--font-size-xl);
		}
		
		.mobile-nav-toggle {
			padding: 0.375rem;
			height: 2.25rem;
			width: 2.25rem;
		}
		
		.icon-container {
			width: 1.125rem;
			height: 1.125rem;
		}
		
		.menu-icon,
		.close-icon {
			width: 1.125rem;
			height: 1.125rem;
		}
	}
	
	/* Smooth scrolling for the page */
	html {
		scroll-behavior: smooth;
	}
</style>
