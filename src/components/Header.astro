---
import { SITE_TITLE } from "../consts";
import HeaderLink from "./HeaderLink.astro";
import ThemeToggle from "./ThemeToggle.astro";
import CategoriesDropdown from "./CategoriesDropdown.astro";
import { Menu, X } from "lucide-astro";

// Navigation links configuration
const navigationLinks = [
  { href: "/", label: "Home" },
  { component: CategoriesDropdown, type: "component" },
  { href: "/writings", label: "All Writings" },
  { href: "/about", label: "About" },
  { href: "/font-test", label: "Font Test" },
];
---

<header
  class="fixed top-0 left-0 right-0 z-50 w-full bg-white/90 dark:bg-gray-900/90 backdrop-blur-md border-b border-gray-200 dark:border-gray-700 shadow-sm"
>
  <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo/Site Title -->
      <div class="flex-shrink-0">
        <h1 class="text-xl font-bold">
          <a
            href="/"
            class="text-gray-900 dark:text-gray-100 hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-200"
          >
            {SITE_TITLE}
          </a>
        </h1>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden lg:flex lg:items-center lg:space-x-8">
        {
          navigationLinks.map((link) =>
            link.type === "component" ? (
              <link.component />
            ) : (
              <HeaderLink href={link.href}>{link.label}</HeaderLink>
            ),
          )
        }
        <ThemeToggle />
      </div>

      <!-- Mobile menu button -->
      <div class="lg:hidden">
        <button
          type="button"
          class="mobile-menu-button p-2 rounded-lg text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-900 transition-all duration-200"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Open main menu</span>
          <Menu class="block h-6 w-6" />
          <X class="hidden h-6 w-6" />
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div class="lg:hidden hidden mobile-menu" id="mobile-menu">
      <div
        class="px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-white dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700"
      >
        {
          navigationLinks.map((link) =>
            link.type === "component" ? (
              <div class="px-3 py-2">
                <link.component />
              </div>
            ) : (
              <a
                href={link.href}
                class="block px-3 py-2 text-base font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-lg transition-all duration-200"
              >
                {link.label}
              </a>
            ),
          )
        }
        <div class="px-3 py-2">
          <ThemeToggle />
        </div>
      </div>
    </div>
  </nav>
</header>

<script>
  // Simple mobile menu toggle
  document.addEventListener("DOMContentLoaded", function () {
    const mobileMenuButton = document.querySelector(".mobile-menu-button");
    const mobileMenu = document.querySelector(".mobile-menu");
    const menuIcon = mobileMenuButton?.querySelector("svg:first-child");
    const closeIcon = mobileMenuButton?.querySelector("svg:last-child");

    if (mobileMenuButton && mobileMenu && menuIcon && closeIcon) {
      mobileMenuButton.addEventListener("click", function () {
        const isExpanded =
          mobileMenuButton.getAttribute("aria-expanded") === "true";

        mobileMenuButton.setAttribute(
          "aria-expanded",
          (!isExpanded).toString(),
        );

        if (isExpanded) {
          mobileMenu.classList.add("hidden");
          menuIcon.classList.remove("hidden");
          closeIcon.classList.add("hidden");
        } else {
          mobileMenu.classList.remove("hidden");
          menuIcon.classList.add("hidden");
          closeIcon.classList.remove("hidden");
        }
      });
    }
  });
</script>
