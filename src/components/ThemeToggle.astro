---
import { Sun, Moon } from "lucide-astro";
---

<button 
  id="theme-toggle" 
  aria-label="Toggle theme" 
  class="p-2 rounded-md text-gray-500 hover:text-gray-700 hover:bg-gray-100 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 relative"
>
  <Sun class="w-5 h-5 sun-icon transition-all duration-200" />
  <Moon class="w-5 h-5 moon-icon absolute inset-0 transition-all duration-200 opacity-0 scale-75 -rotate-90" />
</button>

<script>
  // Simplified theme toggle functionality
  const themeToggle = document.getElementById("theme-toggle");
  const htmlElement = document.documentElement;
  const sunIcon = document.querySelector('.sun-icon');
  const moonIcon = document.querySelector('.moon-icon');

  // Get current theme
  const currentTheme = localStorage.getItem("theme") || "light";
  htmlElement.setAttribute("data-theme", currentTheme);

  // Update icon visibility
  function updateIconVisibility(theme: string) {
    if (theme === "dark") {
      sunIcon?.classList.add('opacity-0', 'scale-75', 'rotate-90');
      moonIcon?.classList.remove('opacity-0', 'scale-75', '-rotate-90');
    } else {
      sunIcon?.classList.remove('opacity-0', 'scale-75', 'rotate-90');
      moonIcon?.classList.add('opacity-0', 'scale-75', '-rotate-90');
    }
  }

  // Toggle theme function
  function toggleTheme() {
    const currentTheme = htmlElement.getAttribute("data-theme");
    const newTheme = currentTheme === "light" ? "dark" : "light";

    htmlElement.setAttribute("data-theme", newTheme);
    localStorage.setItem("theme", newTheme);
    updateIconVisibility(newTheme);
  }

  // Event listener
  themeToggle?.addEventListener("click", toggleTheme);

  // Initialize icon state
  updateIconVisibility(currentTheme);
</script>

