---
import { Sun, Moon } from 'lucide-astro';
---

<button id="theme-toggle" aria-label="Toggle theme" class="theme-toggle">
  <Sun class="sun-icon" />
  <Moon class="moon-icon" />
</button>

<script>
  // Theme toggle functionality
  const themeToggle = document.getElementById('theme-toggle');
  const htmlElement = document.documentElement;
  
  // Check for saved theme preference or default to light
  const currentTheme = localStorage.getItem('theme') || 'light';
  htmlElement.setAttribute('data-theme', currentTheme);
  
  // Update button state
  function updateButtonState() {
    const theme = htmlElement.getAttribute('data-theme');
    if (theme === 'dark') {
      htmlElement.classList.add('dark');
    } else {
      htmlElement.classList.remove('dark');
    }
    
    // Ensure html and body have proper theme colors
    const computedStyle = getComputedStyle(htmlElement);
    const bgColor = computedStyle.getPropertyValue('--color-bg');
    const textColor = computedStyle.getPropertyValue('--color-text');
    
    htmlElement.style.backgroundColor = bgColor;
    htmlElement.style.color = textColor;
    
    if (document.body) {
      document.body.style.backgroundColor = bgColor;
      document.body.style.color = textColor;
    }
  }
  
  // Toggle theme
  function toggleTheme() {
    const currentTheme = htmlElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
    
    htmlElement.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);
    updateButtonState();
  }
  
  // Initialize
  updateButtonState();
  
  // Event listener
  themeToggle?.addEventListener('click', toggleTheme);
  
  // Ensure theme is applied on page load
  document.addEventListener('DOMContentLoaded', updateButtonState);
  
  // Also apply theme when page becomes visible (for better theme switching)
  document.addEventListener('visibilitychange', () => {
    if (!document.hidden) {
      updateButtonState();
    }
  });
</script>

<style>
  .theme-toggle {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: var(--border-radius-md);
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    transition: all var(--transition-ultra-fast);
    color: var(--color-text);
    background-color: transparent;
    border: 1px solid var(--color-border);
  }
  
  .theme-toggle:hover {
    background-color: var(--color-hover-bg);
    transform: scale(1.05);
    border-color: var(--color-link);
  }
  
  .theme-toggle:focus {
    outline: 2px solid var(--color-focus);
    outline-offset: 2px;
    border-color: var(--color-focus);
  }
  
  .sun-icon,
  .moon-icon {
    width: 1.25rem;
    height: 1.25rem;
    transition: all var(--transition-ultra-fast);
    color: var(--color-text);
  }
  
  /* Show sun icon in dark mode, moon icon in light mode */
  .sun-icon {
    opacity: 1;
    transform: scale(1);
  }
  
  .moon-icon {
    opacity: 0;
    transform: scale(0.8);
    position: absolute;
  }
  
  html[data-theme="dark"] .sun-icon {
    opacity: 0;
    transform: scale(0.8);
  }
  
  html[data-theme="dark"] .moon-icon {
    opacity: 1;
    transform: scale(1);
  }
  
  /* Respect user's motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .theme-toggle,
    .sun-icon,
    .moon-icon {
      transition: none;
    }
  }
</style>
